{"version":3,"sources":["App.module.css","data.js","components/CalendarDate.js","components/EditTodoItem.js","components/TodoItem.js","components/TodoList.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","todoItems","d","Date","months","days","CalendarDate","props","state","month","getMonth","year","getFullYear","day","getDay","date","getDate","direction","navigateForwards","bind","navigateBackwards","this","addDateEntry","a","b","currentDate","currentMonth","currentDay","currentYear","daysInMonth","checkMonth","setState","addToSelf","subtractFromSelf","getCurrentDate","updateCalendarDate","className","styles","calDate","onClick","navBtn","monthYear","Component","EditTodoItem","value","todo","handleChange","handleSave","handleCancel","event","target","id","editTodo","key","type","onChange","input","inputBtn","TodoItem","inEditMode","clickedItem","items","isDone","isNotDone","createTodo","handleCheckbox","push","updateData","data","index","indexOf","filter","item","concat","map","todoItem","done","notDone","newItem","TodoList","todoList","console","log","App","app","appMain","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.deb5ce5c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1kX79\",\"appMain\":\"App_appMain__e8_Mi\",\"todoList\":\"App_todoList__Irnz4\",\"App-link\":\"App_App-link__3FsH9\",\"calDate\":\"App_calDate__11uax\",\"navBtn\":\"App_navBtn__1B2mj\",\"date\":\"App_date__1VFiH\",\"monthYear\":\"App_monthYear__1iJ0z\",\"day\":\"App_day__3P8A2\",\"newItem\":\"App_newItem__2hlyL\",\"todoItem\":\"App_todoItem__3XWqi\",\"notDone\":\"App_notDone__3urmy\",\"done\":\"App_done__Xh8fV\",\"input\":\"App_input__2NxBo\",\"inputBtn\":\"App_inputBtn__3igWO\",\"item\":\"App_item__1HZ5q\"};","let todoItems = {};\n\nexport default todoItems;","import React, { Component } from 'react';\nimport todoItems from '../data';\nimport styles from '../App.module.css';\nlet d = new Date();\n\nlet months = [\"Jan\", \"Feb\", \"March\", \"April\", \"May\", \"June\", \"July\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"];\n\nlet days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\nclass CalendarDate extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            month: d.getMonth(),\n            year:  d.getFullYear(),\n            day:   d.getDay(),\n            date:  d.getDate(),\n            direction: \"\",\n        };\n        this.navigateForwards = this.navigateForwards.bind(this);\n        this.navigateBackwards = this.navigateBackwards.bind(this);\n    }\n\n    componentDidMount(){\n        this.addDateEntry();\n      }\n\n\n    addToSelf(a, b) {\n        return a += b;\n    }\n\n    subtractFromSelf(a, b) {\n        return a -= b;\n    }\n\n    checkMonth(month) {\n        switch (month) {\n            //Jan, March, May, July, August, Oct, Dec\n            case 0:\n            case 2:\n            case 4:\n            case 6: \n            case 7: \n            case 9: \n            case 11:\n                return 31;\n            //April, June, Sep, Nov\n            case 3:\n            case 5: \n            case 8: \n            case 10:\n                return 30;\n            //Feb\n            case 1:\n                return 28;\n        }\n    }\n\n    updateCalendarDate() {\n        let currentDate = this.state.date;\n        let currentMonth = this.state.month;\n        let currentDay = this.state.day;\n        let currentYear = this.state.year;\n        let daysInMonth = this.checkMonth(this.state.month);\n        \n        if (this.state.direction === \"forward\") {\n            if (currentDate === daysInMonth && currentMonth === 11) {\n                this.setState({\n                    date: 1,\n                    month: 0\n                }, () => this.addDateEntry())\n            } else if (currentDate === daysInMonth) {\n                this.setState({\n                    date: 1,\n                    month: this.addToSelf(currentMonth, 1)\n                }, () => this.addDateEntry())\n            } else {\n                this.setState(() => ({\n                    date: this.addToSelf(currentDate, 1),\n                }), () => this.addDateEntry())\n            }\n\n            if (currentDay === 6) {\n                this.setState(() => ({\n                    day: 0,\n                }), () => this.addDateEntry())\n            } else {\n                this.setState(() => ({\n                    day: this.addToSelf(currentDay, 1),\n                }), () => this.addDateEntry())\n            }\n\n            if (currentMonth === 11 && currentDate === 31) {\n                this.setState(() => ({\n                    year: this.addToSelf(currentYear, 1)\n                }), () => this.addDateEntry())\n            }\n        } \n        if (this.state.direction === \"backwards\") {\n            if (currentDate === 1) {\n                this.setState(() => ({\n                    month: this.subtractFromSelf(currentMonth, 1)\n                }), () => this.setState({date:  this.checkMonth(this.state.month)}), () => this.addDateEntry()) //set date to the daysInMonth of the updated month state\n            } else {\n                this.setState(() => ({\n                    date: this.subtractFromSelf(currentDate, 1)\n                }), () => this.addDateEntry())\n            }\n\n            if (currentDay === 0) {\n                this.setState(() => ({\n                    day: 6,\n                }), () => this.addDateEntry())\n            } else {\n                this.setState(() => ({\n                    day: this.subtractFromSelf(currentDay, 1),\n                }), () => this.addDateEntry())\n            }\n\n            if (currentMonth === 0 && currentDate === 1) {\n                this.setState(() => ({\n                    year: this.subtractFromSelf(currentYear, 1)\n                }), () => this.addDateEntry())\n            }\n\n            if (currentDate === 1 && currentMonth === 0) {\n                this.setState(() => ({\n                    date: 31,\n                    month: 11\n                }), () => this.addDateEntry())\n            }\n        }\n    }\n\n    addDateEntry() {\n        let currentDate = `${this.state.day}${this.state.month}${this.state.date}${this.state.year}`;\n\n        this.props.getCurrentDate(currentDate);\n\n        if (!todoItems[currentDate]) {\n            todoItems[currentDate] = [];\n        }\n    }\n\n    navigateForwards() {\n        this.setState({\n            direction: \"forward\"\n        }, \n        () => this.updateCalendarDate());\n    }\n\n    navigateBackwards() {\n        this.setState({\n            direction: \"backwards\"\n        }, () => this.updateCalendarDate())\n    }\n\n    render() {\n        return(\n            <div className={styles.calDate}>\n                <button onClick={this.navigateBackwards} className={styles.navBtn}>\n                    {\"<\"}\n                </button>\n                <div className={styles.date}>{this.state.date}</div>\n                <div className={styles.monthYear}>\n                    <div className={styles.month}>{months[this.state.month]}</div>\n                    <div className={styles.year}>{this.state.year}</div>\n                </div>\n                <div className={styles.day}>{days[this.state.day]}</div>\n                <button onClick={this.navigateForwards} className={styles.navBtn}>\n                {\">\"}\n                </button>\n            </div>\n        )\n    }\n}\n\nexport default CalendarDate;\n","import React, { Component } from 'react';\nimport todoItems from '../data';\nimport styles from '../App.module.css';\n\nclass EditTodoItem extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: this.props.todo\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSave = this.handleSave.bind(this);\n        this.handleCancel = this.handleCancel.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n    handleSave(event) {\n        todoItems[this.props.date][this.props.id] = this.state.value;\n        this.props.editTodo(this.props.id);\n    }\n    handleCancel(event) {\n        this.props.editTodo(this.props.id);\n    }\n    render() {\n        return (\n            <div key={this.props.id}>\n                {this.props.todo ? \n                    <div>\n                        <input type=\"text\" value={this.state.value} onChange={this.handleChange} className={styles.input}></input> \n                        <button onClick={this.handleSave} className={styles.inputBtn}>Save</button>\n                        <button onClick={this.handleCancel} className={styles.inputBtn}>Cancel</button>\n                    </div>\n                    : null\n                }\n            </div>\n        )\n    }\n}\n\nexport default EditTodoItem;","import React, { Component } from 'react';\nimport todoItems from '../data';\nimport EditTodoItem from './EditTodoItem';\nimport styles from '../App.module.css';\n\nclass TodoItem extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            inEditMode: false,\n            clickedItem: \"\", \n            items: todoItems,\n            isDone: [],\n            isNotDone: []\n        }\n        this.editTodo = this.editTodo.bind(this);\n        this.createTodo = this.createTodo.bind(this);\n        this.handleCheckbox = this.handleCheckbox.bind(this);\n    }\n\n    createTodo() {\n        todoItems[this.props.date].push(\"Click here to edit\"); \n        return this.updateData(todoItems);\n    }\n\n    updateData(data) {\n        this.setState({\n            items: data\n        })\n    }\n\n    editTodo(index) {\n        this.setState(state => ({ \n            inEditMode: !state.inEditMode, \n            clickedItem: index\n        }));\n    }\n\n    handleCheckbox(todo) {\n        if (this.state.isDone.indexOf(todo) !== -1) {\n            this.setState(()=> ({\n                isDone: this.state.isDone.filter( item => item !== todo),\n                isNotDone: this.state.isNotDone.concat(todo)\n            }))\n        } else {\n            this.setState(() => ({\n                isDone: this.state.isDone.concat(todo),\n                isNotDone: this.state.isNotDone.filter( item => item !== todo),\n            }))\n        }\n    }\n\n    render() {\n        return(\n            <div>\n                <ul className=\"todoItems\">\n                    {this.state.items[this.props.date] &&\n                    this.state.items[this.props.date].map((item, index) => {\n                        if(this.state.inEditMode && this.state.clickedItem === index) {\n                            return (\n                                <EditTodoItem \n                                    id={index} \n                                    todo={item} \n                                    date={this.props.date} \n                                    key={index} \n                                    editTodo={this.editTodo.bind(this)}\n                                />\n                            )\n                        }\n                        else {\n                            return (\n                                <div className={styles.item}>\n                                    <li \n                                        key={index} \n                                        className={styles.todoItem} \n                                        onClick={() => this.editTodo(index)}>\n                                        {item}\n                                    </li>\n                                    <div \n                                        className={this.state.isDone.indexOf(index) !== -1 ? styles.done : styles.notDone} \n                                        onClick={() => this.handleCheckbox(index)}>    \n                                    </div>\n                                </div>\n                            )\n                        }\n                    })}              \n                </ul>\n                <button onClick={this.createTodo} className={styles.newItem}>+</button>\n            </div>\n        )\n    }\n}\n\nexport default TodoItem;","import React, { Component } from 'react';\nimport CalendarDate from './CalendarDate';\nimport TodoItem from './TodoItem';\nimport styles from '../App.module.css';\n\nclass TodoList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentDate: \"\"\n        }\n    }\n    getCurrentDate(date) {\n        this.setState({\n            currentDate: date\n        })\n    }\n    render() {\n        return(\n            <div className={styles.todoList}>\n                <CalendarDate getCurrentDate={this.getCurrentDate.bind(this)}/>\n                <TodoItem date={this.state.currentDate || \"61092019\"}/>\n            </div>\n        )\n    }\n}\n\nexport default TodoList;","import React from 'react';\nimport TodoList from './components/TodoList';\nimport styles from './App.module.css';\n\nconsole.log(styles);\n\nfunction App() {\n  return (\n    <div className={styles.app}>\n      <main className={styles.appMain}>\n        <div>\n          <TodoList/>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}